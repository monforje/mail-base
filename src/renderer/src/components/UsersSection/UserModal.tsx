// src/renderer/src/components/UsersSection/UserModal.tsx
import React, { useState, useEffect } from "react";
import { User, Package } from "../../types";
import { validatePhoneNumber, parsePhoneNumber } from "../../utils";
import { packagesService } from "../../DataServices";

interface UserModalProps {
  isOpen: boolean;
  mode: "search" | "add" | "delete";
  onClose: () => void;
  onSearch: (phone: number) => void; // –ò–°–ü–†–ê–í–õ–ï–ù–û: —á–∏—Å–ª–æ–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω
  onAdd: (user: User) => void;
  onDelete: (phone: number) => void; // –ò–°–ü–†–ê–í–õ–ï–ù–û: —á–∏—Å–ª–æ–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω
  searchResult?: User | null;
}

const UserModal: React.FC<UserModalProps> = ({
  isOpen,
  mode,
  onClose,
  onSearch,
  onAdd,
  onDelete,
  searchResult,
}) => {
  const [phoneStr, setPhoneStr] = useState(""); // –°—Ç—Ä–æ–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞
  const [fullName, setFullName] = useState("");
  const [address, setAddress] = useState("");
  const [errors, setErrors] = useState<string[]>([]);
  // –î–û–ë–ê–í–õ–ï–ù–û: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Å–∫–∞–¥–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
  const [relatedPackages, setRelatedPackages] = useState<Package[]>([]);
  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);

  useEffect(() => {
    if (isOpen) {
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
      setPhoneStr("");
      setFullName("");
      setAddress("");
      setErrors([]);
      setRelatedPackages([]);
      setShowDeleteConfirmation(false);
    }
  }, [isOpen, mode]);

  const getTitle = () => {
    switch (mode) {
      case "search":
        return "–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è";
      case "add":
        return "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è";
      case "delete":
        return "–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è";
      default:
        return "";
    }
  };

  const validateForm = (): boolean => {
    const newErrors: string[] = [];

    if (!phoneStr.trim()) {
      newErrors.push("–¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è");
    } else if (!validatePhoneNumber(phoneStr)) {
      newErrors.push("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 8XXXXXXXXXX)");
    }

    if (mode === "add") {
      if (!fullName.trim()) {
        newErrors.push("–§–ò–û –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è");
      }
      if (!address.trim()) {
        newErrors.push("–ê–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è");
      }
    }

    setErrors(newErrors);
    return newErrors.length === 0;
  };

  // –î–û–ë–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ—Å—ã–ª–æ–∫ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
  const checkRelatedPackages = (phone: number): Package[] => {
    return packagesService.findPackagesBySender(phone);
  };

  // –î–û–ë–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–≤–æ–≥–æ —ç—Ç–∞–ø–∞ —É–¥–∞–ª–µ–Ω–∏—è (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
  const handleDeleteStep1 = () => {
    if (!validateForm()) return;

    const phone = parsePhoneNumber(phoneStr);
    if (phone === null) {
      setErrors(["–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"]);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ—Å—ã–ª–∫–∏
    const packages = checkRelatedPackages(phone);
    setRelatedPackages(packages);
    setShowDeleteConfirmation(true);
  };

  // –î–û–ë–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
  const handleDeleteConfirm = () => {
    const phone = parsePhoneNumber(phoneStr);
    if (phone === null) {
      setErrors(["–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"]);
      return;
    }

    onDelete(phone);
    onClose();
  };

  // –î–û–ë–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è
  const handleDeleteCancel = () => {
    setShowDeleteConfirmation(false);
    setRelatedPackages([]);
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    if (!validateForm()) return;

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–∞—Ä—Å–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —á–∏—Å–ª–æ
    const phone = parsePhoneNumber(phoneStr);
    if (phone === null) {
      setErrors(["–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"]);
      return;
    }

    switch (mode) {
      case "search":
        onSearch(phone);
        break;
      case "add":
        onAdd({ phone, fullName, address });
        onClose();
        break;
      case "delete":
        // –ò–ó–ú–ï–ù–ï–ù–û: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        handleDeleteStep1();
        break;
    }
  };

  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (e.key === "Escape") {
      if (showDeleteConfirmation) {
        handleDeleteCancel();
      } else {
        onClose();
      }
    }
  };

  if (!isOpen) return null;

  return (
    <div
      className="modal-overlay"
      onClick={showDeleteConfirmation ? undefined : onClose}
    >
      <div
        className="modal-content"
        onClick={(e) => e.stopPropagation()}
        onKeyDown={handleKeyDown}
        style={{ maxWidth: showDeleteConfirmation ? "600px" : "400px" }}
      >
        <div className="modal-header">
          <h3>{getTitle()}</h3>
          <button
            className="modal-close"
            onClick={showDeleteConfirmation ? handleDeleteCancel : onClose}
          >
            ‚úï
          </button>
        </div>

        {/* –î–û–ë–ê–í–õ–ï–ù–û: –≠–∫—Ä–∞–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ—Å—ã–ª–∫–∞—Ö */}
        {showDeleteConfirmation ? (
          <div className="modal-form">
            <div style={{ marginBottom: "16px" }}>
              <p
                style={{
                  margin: "0 0 12px 0",
                  fontWeight: "bold",
                  fontSize: "16px",
                }}
              >
                ‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </p>
              <p style={{ margin: "0 0 8px 0" }}>
                –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <strong>{phoneStr}</strong>
              </p>
            </div>

            {relatedPackages.length > 0 ? (
              <div style={{ marginBottom: "16px" }}>
                <div
                  style={{
                    padding: "12px",
                    backgroundColor: "#fff3cd",
                    border: "1px solid #ffeaa7",
                    borderRadius: "4px",
                    marginBottom: "12px",
                  }}
                >
                  <p
                    style={{
                      margin: "0 0 8px 0",
                      fontWeight: "bold",
                      color: "#856404",
                    }}
                  >
                    üöö –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ—Å—ã–ª–∫–∏ (–±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã)
                  </p>
                  <p
                    style={{ margin: "0", fontSize: "12px", color: "#856404" }}
                  >
                    –ù–∞–π–¥–µ–Ω–æ {relatedPackages.length} –ø–æ—Å—ã–ª–æ–∫ –æ—Ç —ç—Ç–æ–≥–æ
                    –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è. –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Å–µ –µ–≥–æ –ø–æ—Å—ã–ª–∫–∏ —Ç–∞–∫–∂–µ
                    –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.
                  </p>
                </div>

                <div
                  style={{
                    maxHeight: "200px",
                    overflowY: "auto",
                    border: "1px solid #ddd",
                    borderRadius: "4px",
                  }}
                >
                  <table
                    style={{
                      width: "100%",
                      borderCollapse: "collapse",
                      fontSize: "12px",
                    }}
                  >
                    <thead>
                      <tr style={{ backgroundColor: "#f8f9fa" }}>
                        <th
                          style={{
                            padding: "6px 8px",
                            textAlign: "left",
                            borderBottom: "1px solid #ddd",
                            fontWeight: "bold",
                          }}
                        >
                          –ü–æ–ª—É—á–∞—Ç–µ–ª—å
                        </th>
                        <th
                          style={{
                            padding: "6px 8px",
                            textAlign: "left",
                            borderBottom: "1px solid #ddd",
                            fontWeight: "bold",
                          }}
                        >
                          –í–µ—Å
                        </th>
                        <th
                          style={{
                            padding: "6px 8px",
                            textAlign: "left",
                            borderBottom: "1px solid #ddd",
                            fontWeight: "bold",
                          }}
                        >
                          –î–∞—Ç–∞
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      {relatedPackages.map((pkg, index) => (
                        <tr
                          key={index}
                          style={{
                            backgroundColor:
                              index % 2 === 0 ? "#ffffff" : "#f8f9fa",
                          }}
                        >
                          <td
                            style={{
                              padding: "4px 8px",
                              borderBottom: "1px solid #eee",
                            }}
                          >
                            {pkg.receiverPhone.toString()}
                          </td>
                          <td
                            style={{
                              padding: "4px 8px",
                              borderBottom: "1px solid #eee",
                            }}
                          >
                            {pkg.weight} –∫–≥
                          </td>
                          <td
                            style={{
                              padding: "4px 8px",
                              borderBottom: "1px solid #eee",
                            }}
                          >
                            {pkg.date}
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            ) : (
              <div style={{ marginBottom: "16px" }}>
                <div
                  style={{
                    padding: "12px",
                    backgroundColor: "#e8f5e8",
                    border: "1px solid #c3e6c3",
                    borderRadius: "4px",
                  }}
                >
                  <p
                    style={{ margin: "0", fontSize: "14px", color: "#2d5a2d" }}
                  >
                    ‚úÖ –£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ—Å—ã–ª–æ–∫.
                  </p>
                </div>
              </div>
            )}

            <div
              style={{
                padding: "12px",
                backgroundColor: "#ffebee",
                border: "1px solid #ffcdd2",
                borderRadius: "4px",
                marginBottom: "16px",
              }}
            >
              <p style={{ margin: "0", fontSize: "12px", color: "#c62828" }}>
                <strong>–í–Ω–∏–º–∞–Ω–∏–µ!</strong> –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.
                {relatedPackages.length > 0
                  ? ` –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ ${relatedPackages.length} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ—Å—ã–ª–æ–∫.`
                  : " –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å."}
              </p>
            </div>

            <div className="modal-actions">
              <button
                type="button"
                onClick={handleDeleteCancel}
                className="btn-cancel"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                type="button"
                onClick={handleDeleteConfirm}
                className="btn-primary"
                style={{ backgroundColor: "#d32f2f", borderColor: "#d32f2f" }}
              >
                {relatedPackages.length > 0
                  ? `–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ ${relatedPackages.length} –ø–æ—Å—ã–ª–æ–∫`
                  : "–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"}
              </button>
            </div>
          </div>
        ) : (
          /* –û–±—ã—á–Ω–∞—è —Ñ–æ—Ä–º–∞ */
          <form onSubmit={handleSubmit} className="modal-form">
            <div className="form-group">
              <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω:</label>
              <input
                id="phone"
                type="text"
                value={phoneStr}
                onChange={(e) => setPhoneStr(e.target.value)}
                placeholder="8XXXXXXXXXX"
                autoFocus
              />
            </div>

            {mode === "add" && (
              <>
                <div className="form-group">
                  <label htmlFor="fullName">–§–ò–û:</label>
                  <input
                    id="fullName"
                    type="text"
                    value={fullName}
                    onChange={(e) => setFullName(e.target.value)}
                    placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="address">–ê–¥—Ä–µ—Å:</label>
                  <input
                    id="address"
                    type="text"
                    value={address}
                    onChange={(e) => setAddress(e.target.value)}
                    placeholder="–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1"
                  />
                </div>
              </>
            )}

            {errors.length > 0 && (
              <div className="error-list">
                {errors.map((error, index) => (
                  <div key={index} className="error-message">
                    {error}
                  </div>
                ))}
              </div>
            )}

            {mode === "search" && searchResult !== undefined && (
              <div className="search-result">
                {searchResult ? (
                  <div className="result-found">
                    <h4>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:</h4>
                    <p>
                      <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {searchResult.phone.toString()}
                    </p>
                    <p>
                      <strong>–§–ò–û:</strong> {searchResult.fullName}
                    </p>
                    <p>
                      <strong>–ê–¥—Ä–µ—Å:</strong> {searchResult.address}
                    </p>
                  </div>
                ) : (
                  <div className="result-not-found">
                    <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º {phoneStr} –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
                  </div>
                )}
              </div>
            )}

            <div className="modal-actions">
              <button type="button" onClick={onClose} className="btn-cancel">
                –û—Ç–º–µ–Ω–∞
              </button>
              <button type="submit" className="btn-primary">
                {mode === "search"
                  ? "–ù–∞–π—Ç–∏"
                  : mode === "add"
                  ? "–î–æ–±–∞–≤–∏—Ç—å"
                  : "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"}
              </button>
            </div>
          </form>
        )}
      </div>
    </div>
  );
};

export default UserModal;
